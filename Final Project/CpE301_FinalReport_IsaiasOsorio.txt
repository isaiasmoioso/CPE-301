TITLE: IMU controlled GimbalGOAL:* Read IMU sensor data* Interpret data to come up with 5 different states (Center, up, down, left, right)* Print Different states serially in terminal* Have gimbal move according to different states * Push different states onlineDELIVERABLES: The project deliverable is to have the foundation built to continue next semester for senior design to, eventually, put this on the market.LITERATURE SURVEY:This project will solve two potential problems. 1. Camera control on quadcopters mid flight2. Give the disabled another activity for their long hours of free timeThe first problem that I plan to solve is was found simply from talking to quadcopter enthusiasts. The second was from a few journals that explain that people with disabilities have a very short list of activates to choose from.COMPONENTS:For this project I used the following components* MPU6050 accelerometer and gyroscope* Two micro servo motors* Gimbal* Serial interface* ESP8266MOD Wi-Fi moduleSCHEMATICS: (exception - include image)INITIAL PCB*: (exception - include image)Top				   Bottom				BothIIMPLEMENTATION:The intention of this project is to have the freedom of controlling the where the camera faces according to head movements. During flight, using a quadcopter, the camera normally remains in a set position. With this project, I intend to continue this for next semester’s senior design.Like previously mentioned, we want to give more control of where the camera faces when flying drones. Another implementation I’m considering is using the feed from multiple cameras be posted to the web and have people who aren’t able to experience the outdoors due to disabilities or illnesses see the world and simply tilt their head to move control in what direction they are facing. Even possibly fly a drone with head movements so we can have as many people experience this.  SNAPSHOTS/SCREENSHOTS*: https://drive.google.com/folderview?id=0B4H0WHqN3RMbRW90RjRnQWtJWkE&usp=sharingVideo Demo       https://youtu.be/CK3F5CiNQqcCODE: (with comments) [*final code]#define F_CPU 8000000UL#define BAUD 9600#include <inttypes.h>#include <stdint.h>#include <avr/io.h>#include <util/delay.h>#include <util/setbaud.h>#include <avr/interrupt.h>#include <math.h>#include "mpu6050.h"#include "mpu6050_reg.h"#include "i2c.h"#include "uart.h"#include "HMC5883l.h"void timer_setup();void get_time(double* dt);volatile double count;const double unit_t = 8/16000000;int main(void){sei();  uart_init();i2c_init();	TCCR0A|=(1<<COM0A1)|(1<<WGM01)|(1<<WGM00)|(1<<COM0B1) |(1<<COM0A1);        //NON Inverted PWM	TCCR0B|=(1<<CS01)|(1<<CS00); //PRESCALER=64 MODE 14(FAST PWM)	//ICR1=2499;  //fPWM=50Hz...fpwm=50=8MHz/N(Top+1) --> Top=8MHz/(50Hz*64) -1=2,499	DDRD |=(1<<PORTD6);	   //PWM Pins as Output servos	DDRD |=(1<<PORTD5);		OCR0B=170;	OCR0A=150;	    DDRB |= _BV(5); //(1<<5)	uint8_t ret;int16_t accel_buff[3], gyro_buff[3]; //variables to store IMU’s valuesdouble accelX, accelY, accelZ;double gyroX, gyroY, gyroZ;double biasX, biasY;double phi_accel, theta_accel;double phi_innov, theta_innov;double phi_est, theta_est;double phi_prev, theta_prev;double dt;char s[30];// initialize & test MPU5060 availabilityret = i2c_start(MPU6050_ADDRESS+I2C_WRITE);if(~ret){	PORTB |= _BV(5);	_delay_ms(200);	PORTB &= ~(_BV(5));}mpu6050_init();timer_setup();// find gyro biasbiasX = 0;biasY = 0;uint8_t i;for(i=0; i<20; i++){	mpu6050_read_gyro_ALL(gyro_buff);	biasX += gyro_buff[0];	biasY += gyro_buff[1];}biasX = biasX/20*(3.14159/180)*1000/32768;biasY = biasY/20*(3.14159/180)*1000/32768;// initialization for Kalman filterdouble P = 0.0;double Q = 0.001;double R = 0.03;double Pp, K;mpu6050_read_accel_ALL(accel_buff);phi_prev = atan2(accelY, accelZ); // rowtheta_prev = atan2(-accelX, sqrt(accelY*accelY+accelZ*accelZ)); // pitchfor(;;){	get_time(&dt);	mpu6050_read_accel_ALL(accel_buff);	mpu6050_read_gyro_ALL(gyro_buff);		// acceleration (m/s^2)	accelX = accel_buff[0]*9.8*2/32768;	accelY = accel_buff[1]*9.8*2/32768;	accelZ = accel_buff[2]*9.8*2/32768;	// gyro rate (rad/s)	gyroX = gyro_buff[0]*(3.14159/180)*1000/32768;	gyroY = gyro_buff[1]*(3.14159/180)*1000/32768;	gyroZ = gyro_buff[2]*(3.14159/180)*1000/32768;	// estimation	phi_est = phi_prev + dt*(gyroX - biasX);	theta_est = theta_prev + dt*(gyroY - biasY);	Pp = P+Q;	// innovation	phi_accel = atan2(accelY, accelZ); // row	phi_innov = phi_accel - phi_est;	theta_accel = atan2(-accelX, sqrt(accelY*accelY+accelZ*accelZ)); // pitch	theta_innov = theta_accel - theta_est;	// Kalman gain	K = Pp/(Pp+R);	// correction	phi_prev = phi_prev + K*phi_innov;	theta_prev = theta_prev + K*theta_innov;	P = (1-K)*Pp;		uart_putchar('\n');	_delay_ms(100);	if (accelZ > 7 && accelX < 2 && accelX >-2 && accelY <2 && accelY > -2) //center	{		OCR0B=170;		OCR0A=150;		uart_putstring("center \r\n");			}		if (accelZ > 7 && accelX > 2)// right	{		OCR0B=120; 				uart_putstring("right \r\n");			}		if (accelZ > 7 && accelX < -2) //left 	{		OCR0B=228; 		uart_putstring("left \r\n");	}		if (accelZ > 7 && accelY >2) // down	{		OCR0A=200;		uart_putstring("down \r\n");	}			if (accelZ > 7 && accelY < -2) // up	{		OCR0A=110; 		uart_putstring("up \r\n");	}}}//end of mainvoid timer_setup(){	TCCR1A = 0x00;	TIMSK1 |= _BV(TOIE1);	TCCR1B |= _BV(CS11);  	TCCR1B &= ~( _BV(CS12)  | _BV(CS10)); // prescaler=8}void get_time(double * dt){	cli();		uint8_t l = TCNT1L;		uint8_t h = TCNT1H;		uint16_t step = h<<8 | l;		*dt = (double)step*5e-7 + count*0.032768;		count = 0;	sei();}// timer 1 overflow interrupt handlerSIGNAL(TIMER1_OVF_vect){	count += 1;}REFERENCE:Pagán-Rodríguez, Ricardo. "How Do Disabled Individuals Spend Their Leisure Time?." Disability And Health Journal 7.2 (2014): 196-205. PsycINFO. Web. 1 May 2016.Breeden, Lori. "Transformative Occupation In Practice: Changing Media Images And Lives Of People With Disabilities." OTJR: Occupation, Participation And Health 32.Suppl 1 (2012): S15-S24. PsycINFO. Web. 1 May 2016.